@model IEnumerable<moqaren.Models.Product>
@{
    ViewData["Title"] = "Product Management";
    var categories = ViewBag.Categories as IEnumerable<Category>;
}

<div class="container mt-4">
    <h1>Product Management</h1>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">@TempData["Success"]</div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }

    <!-- Add Product Form -->
    <div class="card mb-4">
        <div class="card-header">
            <h2>Add New Product</h2>
        </div>
        <div class="card-body">
            <form asp-action="AddProduct" method="post" enctype="multipart/form-data">
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label for="Name">Product Name</label>
                            <input type="text" class="form-control" name="Name" required>
                        </div>
                        <div class="form-group mb-3">
                            <label for="Brand">Brand</label>
                            <input type="text" class="form-control" name="Brand">
                        </div>
                        <div class="form-group mb-3">
                            <label for="Model">Model</label>
                            <input type="text" class="form-control" name="Model">
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label for="CategoryID">Category</label>
                            <select class="form-control" name="CategoryID" required>
                                <option value="">Select Category</option>
                                @foreach (var category in categories)
                                {
                                    <option value="@category.CategoryID">@category.Name</option>
                                }
                            </select>
                        </div>
                        <div class="form-group mb-3">
                            <label for="Description">Description</label>
                            <textarea class="form-control" name="Description" rows="3"></textarea>
                        </div>
                        <div class="form-group mb-3">
                            <label for="image">Product Image</label>
                            <input type="file" class="form-control" name="image" accept="image/*">
                        </div>
                    </div>
                </div>
                <button type="submit" class="btn btn-primary">Add Product</button>
            </form>
        </div>
    </div>

    <!-- Products List -->
    <div class="card">
        <div class="card-header">
            <h2>Products List</h2>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Image</th>
                            <th>Name</th>
                            <th>Category</th>
                            <th>Brand</th>
                            <th>Model</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var product in Model)
                        {
                            <tr>
                                <td>
                                    @if (!string.IsNullOrEmpty(product.ImageURL))
                                    {
                                        <img src="@product.ImageURL" alt="@product.Name" style="max-width: 50px;">
                                    }
                                </td>
                                <td>@product.Name</td>
                                <td>@product.Category?.Name</td>
                                <td>@product.Brand</td>
                                <td>@product.Model</td>
                                <td>
                                    <button class="btn btn-sm btn-primary" onclick="editProduct(@Json.Serialize(product))">Edit</button>
                                    <button class="btn btn-sm btn-danger" onclick="deleteProduct(@product.ProductID)">Delete</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form asp-action="EditProduct" method="post" enctype="multipart/form-data">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <input type="hidden" id="edit-productId" name="ProductID">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label for="edit-name">Product Name</label>
                                <input type="text" class="form-control" id="edit-name" name="Name" required>
                            </div>
                            <div class="form-group mb-3">
                                <label for="edit-brand">Brand</label>
                                <input type="text" class="form-control" id="edit-brand" name="Brand">
                            </div>
                            <div class="form-group mb-3">
                                <label for="edit-model">Model</label>
                                <input type="text" class="form-control" id="edit-model" name="Model">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label for="edit-categoryId">Category</label>
                                <select class="form-control" id="edit-categoryId" name="CategoryID" required>
                                    @foreach (var category in categories)
                                    {
                                        <option value="@category.CategoryID">@category.Name</option>
                                    }
                                </select>
                            </div>
                            <div class="form-group mb-3">
                                <label for="edit-description">Description</label>
                                <textarea class="form-control" id="edit-description" name="Description" rows="3"></textarea>
                            </div>
                            <div class="form-group mb-3">
                                <label for="edit-image">New Image (optional)</label>
                                <input type="file" class="form-control" id="edit-image" name="image" accept="image/*">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this product?</p>
            </div>
            <div class="modal-footer">
                <form asp-action="DeleteProduct" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="delete-productId" name="id">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function editProduct(product) {
            document.getElementById('edit-productId').value = product.productID;
            document.getElementById('edit-name').value = product.name;
            document.getElementById('edit-brand').value = product.brand || '';
            document.getElementById('edit-model').value = product.model || '';
            document.getElementById('edit-categoryId').value = product.categoryID;
            document.getElementById('edit-description').value = product.description || '';

            // Show the modal
            var editModal = new bootstrap.Modal(document.getElementById('editModal'));
            editModal.show();
        }

        function deleteProduct(productId) {
            document.getElementById('delete-productId').value = productId;

            // Show the modal
            var deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            deleteModal.show();
        }

        // Preview image before upload for Add Product
        document.querySelector('input[name="image"]').addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (file) {
                if (file.size > 5 * 1024 * 1024) { // 5MB limit
                    alert('File size must be less than 5MB');
                    this.value = '';
                    return;
                }

                if (!file.type.match('image.*')) {
                    alert('Please select an image file');
                    this.value = '';
                    return;
                }
            }
        });

        // Preview image before upload for Edit Product
        document.getElementById('edit-image').addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (file) {
                if (file.size > 5 * 1024 * 1024) { // 5MB limit
                    alert('File size must be less than 5MB');
                    this.value = '';
                    return;
                }

                if (!file.type.match('image.*')) {
                    alert('Please select an image file');
                    this.value = '';
                    return;
                }
            }
        });

        // Form validation
        document.querySelectorAll('form').forEach(form => {
            form.addEventListener('submit', function(e) {
                if (!form.checkValidity()) {
                    e.preventDefault();
                    e.stopPropagation();
                }
                form.classList.add('was-validated');
            });
        });

        // Auto-hide alerts after 5 seconds
        document.querySelectorAll('.alert').forEach(alert => {
            setTimeout(() => {
                alert.style.display = 'none';
            }, 5000);
        });
    </script>
}